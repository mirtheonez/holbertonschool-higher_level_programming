>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> print(matrix_mul([[2, 2], [5, 5]], [[3, 3], [1, 1]]))
[[8, 8], [20, 20]]
>>> print(matrix_mul(None, None))
Traceback (most recent call last):
TypeError: m_a must be a list
>>> print(matrix_mul([[1, 2, 3]], [[2.5], [3.1], [0]]))
[[8.7]]
>>> print(matrix_mul([[]], [[1]]))
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> print(matrix_mul([[1]], []))
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> print(matrix_mul([[1, 2], [1]], [[3, 4], [5, 6]]))
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> print(matrix_mul([[1, "-", 3]], [[2.5], [3.1], ["b"]]))
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> print(matrix_mul([[2, 4], [6, 8]], [[1, 2, 3, 4]]))
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
>>> print(matrix_mul("hello", [[1], [2]]))
Traceback (most recent call last):
TypeError: m_a must be a list
>>> print(matrix_mul([[1], [2]], "hello"))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> print(matrix_mul(1, 2))
Traceback (most recent call last):
TypeError: m_a must be a list
>>> print(matrix_mul([[2.5], [3.1], [0]], [[1, "-", 3]]))
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> print(matrix_mul([[3, 4], [5, 6]], [[1, 2], [1]]))
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
>>> print(matrix_mul([[3, 4], [5, 6]])) # doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> print(matrix_mul()) # doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
>>> print(matrix_mul([3, 4, 5, 6], [[1, 2], [1]]))
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> print(matrix_mul([[3, 4], [5, 6]], [1, 2, 1]))
Traceback (most recent call last):
TypeError: m_b must be a list of lists